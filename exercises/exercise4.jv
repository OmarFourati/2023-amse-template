valuetype NoEmptyInt oftype integer {
    constraints: [ NoEmptyInt ];
}

constraint NoEmptyInt oftype RangeConstraint {
    lowerBound: 0;
    upperBound: 1000000000;      
}


pipeline BatterieTemperatur {
    block TempFileExtractor oftype HttpExtractor {
  url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }
    block ZipArchiveInterpreter oftype ArchiveInterpreter {
  archiveType: "zip";
    }
    block DataFilePicker oftype FilePicker {
  path: "/data.csv";
  }
    block BatterieTempTextFileInterpreter oftype TextFileInterpreter {}
    block BatterieTempInterpreter oftype CSVInterpreter { delimiter: ';'; }
    block TemperatureTableInterpreter oftype TableInterpreter {
      header: false;
      columns: [
        "Geraet" oftype NoEmptyInt,
        "Hersteller" oftype text,
        "Model" oftype text,
        "Monat" oftype integer,
        "Temperatur" oftype decimal,
        "Batterietemperatur" oftype decimal,
        "Geraet aktiv" oftype text        
];
    }

    block FahrenheitTransformer1 oftype TableTransformer {
        inputColumn: 'Temperatur';
        outputColumn: 'Temperatur';
        use: CelsiusToFahrenheit;
}

    block FahrenheitTransformer2 oftype TableTransformer {
        inputColumn: 'Batterietemperatur';
        outputColumn: 'Batterietemperatur';
    use: CelsiusToFahrenheit;
}
    transform CelsiusToFahrenheit {
		    from celsius oftype decimal;
		    to fahrenheit oftype decimal;
            
		    fahrenheit:  ((celsius*9)/5)+32;
}

    
    block DatabaseLoader oftype SQLiteLoader { table: "temperatures"; file: "./temperatures.sqlite"; }



    TempFileExtractor
        -> ZipArchiveInterpreter
        -> DataFilePicker
        -> BatterieTempTextFileInterpreter
        -> BatterieTempInterpreter
        -> TemperatureTableInterpreter
        -> FahrenheitTransformer1
        -> FahrenheitTransformer2
        -> DatabaseLoader;

}